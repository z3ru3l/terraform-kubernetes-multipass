#cloud-config
bootcmd:
- printf "[Resolve]\nDNS=8.8.8.8" > /etc/systemd/resolved.conf
- [systemctl, restart, systemd-resolved]
- curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
- echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
- curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
- echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list
- chmod a+r /usr/share/keyrings/docker-archive-keyring.gpg
- chmod a+r /usr/share/keyrings/kubernetes-archive-keyring.gpg
users:
  - name: root
    ssh_authorized_keys:
    - ${ssh_public_key}
growpart:
    mode: auto
    devices: ["/"]
manage_etc_hosts: localhost
locale: "en_US.UTF-8"
package_update: true
package_upgrade: true
apt_update: true
apt_upgrade: true
packages: 
    # if you change kubernetes version...
    - kubeadm=${k_version}
    - kubelet=${k_version}
    - kubectl=${k_version}
    # ...also use a SUPPORTED docker version for it
    - docker-ce
    - apt-transport-https
    - ntp
    - jq
    - golang-go
write_files:
  - path: /etc/modules
    content: |
      ip_vs
      ip_vs_rr
      ip_vs_wrr
      ip_vs_sh
      nf_conntrack_ipv4
  - path: /etc/syctl.conf
    content: |
      net.ipv4.ip_forward=1
      net.bridge.bridge-nf-call-ip6tables=1
      net.bridge.bridge-nf-call-iptables=1
  - path: /etc/environment
    content: |
      LC_ALL=en_US.UTF-8
      LANG=en_US.UTF-8
      KUBECONFIG=/etc/kubernetes/admin.conf
  - path: /etc/docker/daemon.json
    content: |
        { 
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
        "max-size": "100m" },
        "storage-driver": "overlay2" 
        }
runcmd:
- sysctl -p
- systemctl daemon-reload
- systemctl restart docker kubelet
- export GOPATH=/root/go
- export GOCACHE=/root/go/cache
- git clone https://github.com/Mirantis/cri-dockerd.git cri-dockerd
- cd cri-dockerd && mkdir bin 
- cd src && go get && go build -o ../bin/cri-dockerd && cd ..
- mkdir -p /usr/local/bin
- install -o root -g root -m 0755 bin/cri-dockerd /usr/local/bin/cri-dockerd
- cp -a packaging/systemd/* /etc/systemd/system
- sed -i -e 's,/usr/bin/cri-dockerd,/usr/local/bin/cri-dockerd,' /etc/systemd/system/cri-docker.service
- systemctl daemon-reload
- systemctl enable cri-docker.service
- systemctl enable --now cri-docker.socket
${extra_cmd}
- touch /tmp/signal